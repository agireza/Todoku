@model IEnumerable<Todoku.Models.Cart>

@{
    ViewBag.Title = "Cart";
}

<script type="text/javascript">
    $(function () {
        $("#divCarts").on('click', "input[type='button']", function () {
            var cartID = $(this).parent().parent().find(".keyField").val();
            var data = { CartID: cartID };
            OnSaveData('@Url.Content("~/Cart/RemoveFromCart")', data, function (result) {
                window.location.href = '@Url.Content("~/Cart/")';
            });
        });
    });
</script>

<h2>Cart</h2>
<div id="divCarts">
@using (Html.BeginForm("ProcessCart", "Cart"))
{
    foreach (var item in Model)
    { 
        <div style="width:100%; border:1px solid black; margin-bottom:5px;">
            <img alt="Image not found" style="max-height:75px; max-width:75px;" src="@Url.Content(item.product.ImgLink)" alt="" onError="this.src='@Url.Content("~/Uploads/Todoku/Produk/Default/img_not_found.jpg")'"/>
            @Html.HiddenFor(model => item.CartID, new { @class = "keyField" })
            <div>@Html.DisplayFor(model => item.product.ProductName)</div>
            @if(item.Attributes!= null)
            {
                foreach (String str in item.Attributes.Split('|'))
                {
                    Int32 AttributeID = Convert.ToInt32(str);
                    Todoku.Models.ProductAttribute entity = ((List<Todoku.Models.ProductAttribute>)ViewBag.ProductAtt).FirstOrDefault(x => x.AttributeID == AttributeID);
                    <div>
                        @Html.Label(String.Format("{0} : {1}", entity.attgroup.GroupName, entity.AttributeName))
                    </div>
                }
            }
            <div>Pesan : @Html.DisplayFor(x => item.TotalAmount) x @Html.DisplayFor(model => item.Quantity) pcs</div>
            @*<div>Harga : @Html.DisplayFor(x => item.product.detail.Price)</div>
            @{
                Decimal vat = (item.product.detail.Price * item.product.detail.VATPercentage / 100);
                String vatamount = vat.ToString("C");
            }
            <div>Pajak : @Html.DisplayFor(x => @vatamount)</div>*@
            @*<div>Jumlah @Html.DisplayFor(model => item.Quantity) pcs</div>*@
            <div>Total @Html.DisplayFor(model => item.LineAmount)</div>
            <div><input type="button" value="batal" class="btnCancel" /></div>
        </div>
    }
    <p>
        Total Belanjaan : @Model.Sum(x => x.LineAmount).ToString("C")
    </p>
    if (Model.Count() > 0)
    { 
        <p>
            <input type="submit" value="Pembayaran" />
        </p>
    }
}
</div>

