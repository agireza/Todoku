@model Todoku.Models.Product

@{
    ViewBag.Title = "Todoku";
}
<script type="text/javascript">
    $(function () {
        $('#btnSave').click(function () {
            var data = {
                ProductID: $('#ProductID').val(),
                ProductCode: $('#ProductCode').val(),
                ProductName: $('#ProductName').val(),
                Category: $('#Category').val(),
                ImgLink: $('#ImgLink').val(),
                ShortDescription: $('#ShortDescription').val(),
                detail: {
                    Quantity: $('#detail_Quantity').val(),
                    Weight: $('#detail_Weight').val(),
                    Price: $('#detail_Price').val(),
                    DiscountInPercentage: $('#detail_DiscountInPercentage').val(),
                    DiscountInPercentage2: $('#detail_DiscountInPercentage2').val(),
                    DiscountInPercentage3: 0,
                    LineAmount: $('#detail_LineAmount').val()
                }
            };
            OnSaveData('@Url.Content("~/Merchants/Product/Edit")', data, function (result) {
                if (result.ok) {
                    window.location.href = "@Url.Content("~/Merchants/Product/Edit/")" + $('#ProductID').val();
                }
            });
        });

        $('.txtPrice ').change(function () {
            CalculateTotal();
        });

        $('#detail_DiscountInPercentage').change(function () {
            CalculateTotal();
        });

        $('#detail_DiscountInPercentage2').change(function () {
            CalculateTotal();
        });

        $("#tabs").tabs();

        $("#sub-tabs").tabs();

        $(".grdView").on("click",".Delete",function(){
            var id = $(this).closest('tr').find('.keyField').val();
            var data = {id : id};
            OnSaveData('@Url.Content("~/Merchants/Product/DeleteProductAttribute")', data, function (result) {
                if (result.ok) {
                    window.location.href = "@Url.Content("~/Merchants/Product/Edit/")" + $('#ProductID').val();
                }
            });
        });
    });
    
    function CalculateTotal() {
        var price = parseFloat($('.txtPrice').val());
        var discount1 = parseFloat($('#detail_DiscountInPercentage').val());
        var discount2 = parseFloat($('#detail_DiscountInPercentage2').val());
        var vatAmount = parseInt("@(Todoku.Models.SystemSetting.VATPercentage)");
        var totalAmount = price * (1 - ((discount1 + discount2) / 100) + (discount1 * discount2) / 10000);
        $('#txtVATAmount').val(totalAmount * vatAmount / 100);
        $('#detail_LineAmount').val(parseFloat(totalAmount * (1 + vatAmount / 100)).toFixed(0));
    }
</script>
<h2>Tambah Produk</h2>

<div id="tabs">
  <ul>
    <li><a href="#tabs-1">Info Produk</a></li>
    <li><a href="#tabs-2">Deskripsi</a></li>
    <li><a href="#tabs-3">Lain-Lain</a></li>
  </ul>
  <div id="tabs-1">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
    
        <table width="100%">
            <colgroup>
                <col width='50%' />
            </colgroup>
            <tr>
                <td valign="top">
                    <fieldset>
                        <legend>Produk</legend>
                        @Html.HiddenFor(model => model.ProductID)

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ProductCode)
                        </div>
                        <div class="editor-field">
                            @Html.DisplayFor(model => model.ProductCode)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ProductName)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ProductName)
                            @Html.ValidationMessageFor(model => model.ProductName)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.Category)
                        </div>
                        <div class="editor-field">
                            @Html.DropDownList("Category")
                            @Html.ValidationMessageFor(model => model.Category)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.ShortDescription)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.ShortDescription)
                            @Html.ValidationMessageFor(model => model.ShortDescription)
                        </div>
                    </fieldset>
                </td>
                <td>
                    <fieldset>
                        <legend>Detail</legend>
                        <div class="editor-label">
                            @Html.LabelFor(model => model.detail.Quantity)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.detail.Quantity)
                            @Html.ValidationMessageFor(model => model.detail.Quantity)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.detail.Weight)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.detail.Weight)
                            @Html.ValidationMessageFor(model => model.detail.Weight)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.detail.Price)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.detail.Price, new { @class = "txtPrice txtNumber" })
                            @Html.ValidationMessageFor(model => model.detail.Price)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.detail.DiscountInPercentage)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.detail.DiscountInPercentage)
                            @Html.ValidationMessageFor(model => model.detail.DiscountInPercentage)
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.detail.DiscountInPercentage2)
                        </div>
                        <div class="editor-field">
                            @Html.EditorFor(model => model.detail.DiscountInPercentage2)
                            @Html.ValidationMessageFor(model => model.detail.DiscountInPercentage2)
                        </div>

                        <div class="editor-label">
                            @Html.Label("Pajak")
                        </div>
                        <div class="editor-field">
                            <input type="text" value="@Model.detail.VATAmount" id="txtVATAmount" class="txtNumber" />
                        </div>

                        <div class="editor-label">
                            @Html.LabelFor(model => model.detail.LineAmount)
                        </div>
                        <div class="editor-field">
                            @Html.TextBoxFor(model => model.detail.LineAmount, new { @class = "txtPrice txtNumber" })
                            @Html.ValidationMessageFor(model => model.detail.LineAmount)
                        </div>
                    </fieldset> 
                </td>
            </tr>
        </table>
    }
    @using (Html.BeginForm())
    { 
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Lain-Lain</legend>
            <p>@Html.ActionLink("Tambah", "CreateProductAttribute", "Product", new { ProductID = @Model.ProductID }, null)</p>
            <table class="grdView">
                <colgroup>
                    <col />
                    <col width="120px" />
                    <col width="120px" />
                    <col width="120px" />
                </colgroup>
                <thead>
                    <tr>
                        <td>Nama</td>
                        <td>Group</td>
                        <td>Stok</td>
                        <td></td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in @Model.attribute.Where(x => !x.IsDeleted)) 
                    { 
                        <tr>
                            <td>@item.AttributeName</td>
                            <td align="center">@item.attgroup.GroupName</td>
                            <td align="right">@item.Quantity</td>
                            <td align="center">
                                <input type="hidden" class="keyField" value="@item.AttributeID"/>
                                @Html.ActionLink("Edit", "EditProductAttribute", "Product", new { id = @item.AttributeID }, null) |
                                <a href="#" class="Delete">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </fieldset>
    }
    <p><input type="button" value="Save" id="btnSave" /></p>
  </div>
  <div id="tabs-2">
    <div id="sub-tabs">
        <ul>
            <li><a href="#sub-tabs-1">Deskripsi</a></li>
            <li><a href="#sub-tabs-2">Spesifikasi</a></li>
        </ul>
        <div id="sub-tabs-1">
            @using (Html.BeginForm("SaveDescription", "Product", FormMethod.Post))
            {
                @Html.HiddenFor(model => Model.ProductID)
                <textarea id="txtDescription" class="RichEditor" name="Description" rows="2" cols="2">@Model.Description</textarea>
                <input type="submit" value="Save" />
            }
        </div>
        <div id="sub-tabs-2">
            @using (Html.BeginForm("SaveSpesification", "Product", FormMethod.Post))
            {
                @Html.HiddenFor(model => Model.ProductID)
                <textarea id="txtSpesification" class="RichEditor" name="Spesification" rows="2" cols="2">@Model.Spesification</textarea>
                <input type="submit" value="Save" />
            }
        </div>
    </div>
  </div>
  <div id="tabs-3">
    @using (Html.BeginForm("UploadFile", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <fieldset>
            <legend>Lain - Lain</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.ImgLink)
            </div>
            <input type="hidden" value="@Model.ProductID" name="hdnProductID" />
            <input type="file" name="file" id="file" />
            <input type="submit" value="Upload" />
        </fieldset>
    }
  </div>
</div>

<div>
    <a href="/Todoku/Merchants/Detail/@Model.MerchantID">Back to List</a>
</div>